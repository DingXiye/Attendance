<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dy.dao.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.dy.bean.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="tec_id" jdbcType="VARCHAR" property="tecId" />
    <result column="tec_name" jdbcType="VARCHAR" property="tecName" />
    <result column="tec_password" jdbcType="VARCHAR" property="tecPassword" />
    <result column="coursename" jdbcType="VARCHAR" property="coursename" />
    <result column="classname" jdbcType="VARCHAR" property="classname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tec_id, tec_name, tec_password, coursename, classname
  </sql>
  <select id="selectByExample" parameterType="com.dy.bean.TeacherExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dy.bean.TeacherExample">
    delete from tb_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dy.bean.Teacher">
    insert into tb_teacher (id, tec_id, tec_name, 
      tec_password, coursename, classname
      )
    values (#{id,jdbcType=INTEGER}, #{tecId,jdbcType=VARCHAR}, #{tecName,jdbcType=VARCHAR}, 
      #{tecPassword,jdbcType=VARCHAR}, #{coursename,jdbcType=VARCHAR}, #{classname,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dy.bean.Teacher">
    insert into tb_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tecId != null">
        tec_id,
      </if>
      <if test="tecName != null">
        tec_name,
      </if>
      <if test="tecPassword != null">
        tec_password,
      </if>
      <if test="coursename != null">
        coursename,
      </if>
      <if test="classname != null">
        classname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tecId != null">
        #{tecId,jdbcType=VARCHAR},
      </if>
      <if test="tecName != null">
        #{tecName,jdbcType=VARCHAR},
      </if>
      <if test="tecPassword != null">
        #{tecPassword,jdbcType=VARCHAR},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        #{classname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dy.bean.TeacherExample" resultType="java.lang.Long">
    select count(*) from tb_teacher
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_teacher
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.tecId != null">
        tec_id = #{record.tecId,jdbcType=VARCHAR},
      </if>
      <if test="record.tecName != null">
        tec_name = #{record.tecName,jdbcType=VARCHAR},
      </if>
      <if test="record.tecPassword != null">
        tec_password = #{record.tecPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.coursename != null">
        coursename = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.classname != null">
        classname = #{record.classname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_teacher
    set id = #{record.id,jdbcType=INTEGER},
      tec_id = #{record.tecId,jdbcType=VARCHAR},
      tec_name = #{record.tecName,jdbcType=VARCHAR},
      tec_password = #{record.tecPassword,jdbcType=VARCHAR},
      coursename = #{record.coursename,jdbcType=VARCHAR},
      classname = #{record.classname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dy.bean.Teacher">
    update tb_teacher
    <set>
      <if test="tecId != null">
        tec_id = #{tecId,jdbcType=VARCHAR},
      </if>
      <if test="tecName != null">
        tec_name = #{tecName,jdbcType=VARCHAR},
      </if>
      <if test="tecPassword != null">
        tec_password = #{tecPassword,jdbcType=VARCHAR},
      </if>
      <if test="coursename != null">
        coursename = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="classname != null">
        classname = #{classname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dy.bean.Teacher">
    update tb_teacher
    set tec_id = #{tecId,jdbcType=VARCHAR},
      tec_name = #{tecName,jdbcType=VARCHAR},
      tec_password = #{tecPassword,jdbcType=VARCHAR},
      coursename = #{coursename,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>