<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
      ">
	<!-- 不扫控制器 -->
	<context:component-scan base-package="com.dy">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 配置数据源 -->
	<!-- <context:property-placeholder location="dbconfig.properties" /> -->
	<bean id="poolDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--<property name="driverClass" value="${jdbc.driverClass}" /> <property 
			name="jdbcUrl" value="${jdbc.jdbcurl}" /> <property name="user" value="${jdbc.user}" 
			/> <property name="password" value="${jdbc.password}" /> -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/attendancedb" />
		<property name="user" value="root" />
		<property name="password" value="1234" />
	</bean>

	<!-- 配置sqlSessionFactory ,整合mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="poolDataSource" />
		<property name="configLocation" value="classpath:mybatis.cfg.xml"></property>
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 配置一个sqlsession来批量生成数据 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		<constructor-arg name="executorType" value="BATCH"></constructor-arg>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到IOC容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现加入到ioc容器中 -->
		<property name="basePackage" value="com.dy.dao"></property>
	</bean>

	<!-- 事务控制器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="poolDataSource"></property>
	</bean>

	<!-- 开启基于注解的事务，使用xml配置形式的事务 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.dy.service..*(..))"
			id="point" /><!--切入点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="point" />
	</aop:config>

	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" />
			<!-- 以get开始的所有方法 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>