<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<!-- 该配置文件为mybatis的逆向生成类，从数据库生成类对象，方便快捷。 还有重要的就是我们要生成的实体类所对应的的表或者试图 -->
<generatorConfiguration>
	<context id="MBG" targetRuntime="MyBatis3" defaultModelType="conditional">
		<commentGenerator>
			<property name="suppressAllComments" value="true"></property>
		</commentGenerator>

		<!-- 数据库连接 -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/attendancedb" userId="root"
			password="1234">
		</jdbcConnection>
		<!-- 指定生成的类型为java类型，避免数据库中number等类型字段 -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>
		<!-- 生成model模型，对应的包，存放位置可以指定具体的路径,如/ProjectName/src，也可以使用MAVEN来自动生成 -->
		<javaModelGenerator targetPackage="com.dy.bean"
			targetProject=".\src\main\java">
			<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
			<property name="enableSubPackages" value="true" />
			<!-- 设置是否在getter方法中，对String类型字段调用trim()方法 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>

		<!--对应的xml mapper文件 -->
		<sqlMapGenerator targetPackage="mapper" targetProject=".\src\main\resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>

		<!-- 对应的dao接口 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.dy.dao" targetProject=".\src\main\java">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 表名对应生成的实体 -->
		<!-- <table tableName="tb_student" domainObjectName="Student" /> <table 
			tableName="tb_studentinfo" domainObjectName="StudentInfo" /> -->
		<table tableName="tb_class" domainObjectName="Class" />
	</context>
</generatorConfiguration>